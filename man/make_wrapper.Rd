% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wrappers.R
\name{make_wrapper}
\alias{make_wrapper}
\alias{wrappers}
\alias{htmlcommentwrap}
\alias{latexwrap}
\alias{rawblockwrap}
\alias{rawspanwrap}
\alias{citationwrap}
\title{Make a wrapper function}
\usage{
make_wrapper(label, regex, type = c("block", "inline"))
}
\arguments{
\item{label}{the label to use for chunks of this type, e.g., "citation", "table".
These should be unique for each type of wrapper used. \code{\link[=redoc]{redoc()}}
will throw an error otherwise.}

\item{regex}{A regular expression that identifies the text to be wrapped and
restored, including all delimiters.  It will search in a single string with
line breaks.  \link[stringi:stringi-search-regex]{ICU regular expressions} are used.
The \code{(?s)} flag is recommended for multi-line expressions.}

\item{type}{whether the text should be treated as inline or block text. Inlines
are wrapped in \code{span} elements and blocks are wrapped in \code{divs}.  These are
treated differently in several ways, especially when restoring text in \code{\link[=dedoc]{dedoc()}}.}
}
\value{
A function of class \code{redoc_wrapper}
}
\description{
Wrapper functions are passed to the \code{wrapper=} argument of
\code{\link[=redoc]{redoc()}} to specify what text in R Markdown files should be
captured and restored when de-rendering (in addition to code chunks, inline
code, and YAML blocks).  \code{make_wrapper()} simplifies creation of these
wrapper functions and returns a function that can be passed to \code{\link[=redoc]{redoc()}}.

Wrappers included in the package, all of which are used by default, are:

\tabular{llll}{
\strong{Type of markup} \tab \strong{Function}           \tab \strong{Label}        \tab \strong{Type} \cr
HTML Comments      \tab \code{htmlcommentwrap()}    \tab \code{"htmlcomment"}  \tab inline   \cr
Single-line LaTeX  \tab \code{latexwrap()}          \tab \code{"latex"}        \tab block    \cr
Pandoc citations   \tab \code{citationwrap()}       \tab \code{"citation"}     \tab inline   \cr
Raw Blocks         \tab \code{rawblockwrap()}       \tab \code{"rawblock"}     \tab block    \cr
Raw Spans          \tab \code{rawspanwrap()}        \tab \code{"rawspan"}      \tab inline
}
}
\details{
Some captured text can not be selected by regular expressions, in which case
custom functions can be provided to parse out the relevant text. See the vignette "Developing
with redoc" for more detail.
}
\examples{

rmarkdown::render(
    redoc_example_rmd(),
    output_format = redoc(
                      wrappers = list(
                        htmlcommentwrap,
                        latexwrap)))

# This is how each of these functions are defined in the redoc package
htmlcommentwrap <- make_wrapper(
    label = "htmlcomment",
    regex = "(?s)<!--.*?-->",
    type = "inline")

latexwrap <- make_wrapper(
    label = "latex",
    regex = "(?<=[\\n\\r])\\\\\\\\\\\\w+.*?(?=[\\n\\r])",
    type = "block")

rawblockwrap <- make_wrapper(
    label = "rawblock",
    regex = "(?s)```\\\\{=\\\\w+\\\\}.*?```\\\\h*",
    type = "block")

rawspanwrap <- make_wrapper(
    label = "rawspan",
    regex = "(?s)`[^`]`\\\\{=\\\\w+?\\\\}",
    type = "inline")

citationwrap <- make_wrapper(
    label = "citation",
    regex = "(?:@\\\\w+|\\\\[.*?-?@\\\\w+.*?\\\\](?!\\\\[\\\\(\\\\{))",
    type = "inline")
}
